//font - size, line-height, weight
@mixin font($size: 16, $line: 18, $weight: normal) {
  font-size: ($size) + 0px;
  line-height: ($line) + 0px;
  font-weight: ($weight);
}

// Headers
@mixin headers {
  h1, h2, h3, h4, h5, h6 {
    @content;
  }
}

////////////////////////////////////////////////////////////////////////////////
// Breakpoints
$xsmall-range:  (0em, 320px);          //0    to 320
$small-range:   (321em, 640px);        //321  to 640
$medium-range:  (641px, 800px);        //641  to 800
$large-range:   (801px, 1024px);       //801  to 1024
$xlarge-range:  (1025px, 1440px);      //1025 to 1440
$xxlarge-range: (1441px, 1920px);      //1441 to 1920
$xxxlarge-range: (1921px, 99999999em); //1921 to 1599999984

////////////////////////////////////////////////////////////////////////////////
// for media queries
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}
@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

////////////////////////////////////////////////////////////////////////////////
// sizes
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// xsmall
@mixin xsmall-down {
  @media only screen and (max-width: #{upper-bound($xsmall-range)}) {
    @content;
  }
}
@mixin xsmall {
  @media only screen {
    @content;
  }
}
@mixin xsmall-only {
  @media only screen and (max-width: #{upper-bound($xsmall-range)}) {
    @content;
  }
}
@mixin xsmall-up {
  @media only screen {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// small
@mixin small-down {
  @media only screen and (max-width: #{upper-bound($small-range)}) {
    @content;
  }
}
@mixin small {
  @media only screen and (min-width: #{lower-bound($small-range)}) {
    @content;
  }
}
@mixin small-only {
  @media only screen and (min-width: #{lower-bound($small-range)}) and (max-width: #{upper-bound($small-range)}) {
    @content;
  }
}
@mixin small-up {
  @media only screen and (min-width: #{lower-bound($small-range)}) {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// medium
@mixin medium-down {
  @media only screen and (max-width: #{upper-bound($medium-range)}) {
    @content;
  }
}
@mixin medium {
  @media only screen and (min-width: #{lower-bound($medium-range)}) {
    @content;
  }
}
@mixin medium-only {
  @media only screen and (min-width: #{lower-bound($medium-range)}) and (max-width: #{upper-bound($medium-range)}) {
    @content;
  }
}
@mixin medium-up {
  @media only screen and (min-width: #{lower-bound($medium-range)}) {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// large
@mixin large-down {
  @media only screen and (max-width: #{upper-bound($large-range)}) {
    @content;
  }
}
@mixin large {
  @media only screen and (min-width: #{lower-bound($large-range)}) {
    @content;
  }
}
@mixin large-only {
  @media only screen and (min-width: #{lower-bound($large-range)}) and (max-width: #{upper-bound($large-range)}) {
    @content;
  }
}
@mixin large-up {
  @media only screen and (min-width: #{lower-bound($large-range)}) {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// xlarge
@mixin xlarge-down {
  @media only screen and (max-width: #{upper-bound($xlarge-range)}) {
    @content;
  }
}
@mixin xlarge {
  @media only screen and (min-width: #{lower-bound($xlarge-range)}) {
    @content;
  }
}
@mixin xlarge-only {
  @media only screen and (min-width: #{lower-bound($xlarge-range)}) and (max-width: #{upper-bound($xlarge-range)}) {
    @content;
  }
}
@mixin xlarge-up {
  @media only screen and (min-width: #{lower-bound($xlarge-range)}) {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// xxlarge
@mixin xxlarge-down {
  @media only screen and (max-width: #{upper-bound($xxlarge-range)}) {
    @content;
  }
}
@mixin xxlarge {
  @media only screen and (min-width: #{lower-bound($xxlarge-range)}) {
    @content;
  }
}
@mixin xxlarge-only {
  @media only screen and (min-width: #{lower-bound($xxlarge-range)}) and (max-width: #{upper-bound($xxlarge-range)}) {
    @content;
  }
}
@mixin xxlarge-up {
  @media only screen and (min-width: #{lower-bound($xxlarge-range)}) {
    @content;
  }
}
////////////////////////////////////////////////////////////////////////////////
// xxxlarge
@mixin xxxlarge-down {
  @media only screen and (max-width: #{upper-bound($xxxlarge-range)}) {
    @content;
  }
}
@mixin xxxlarge {
  @media only screen and (min-width: #{lower-bound($xxxlarge-range)}) {
    @content;
  }
}
@mixin xxxlarge-only {
  @media only screen and (min-width: #{lower-bound($xxxlarge-range)}) and (max-width: #{upper-bound($xxxlarge-range)}) {
    @content;
  }
}
@mixin xxxlarge-up {
  @media only screen and (min-width: #{lower-bound($xxxlarge-range)}) {
    @content;
  }
}